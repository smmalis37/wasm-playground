#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq, Eq)]
pub struct Cell {
    red: u8,
    green: u8,
    blue: u8,
    alpha: u8,
}

macro_rules! rgb {
    ( $r:expr, $g:expr, $b:expr ) => {
        Cell {
            red: $r,
            green: $g,
            blue: $b,
            alpha: 0xFF,
        }
    };
}

pub const FIRE_PROGRESS: [Cell; 38] = [
    rgb!(0x00, 0x00, 0x00),
    rgb!(0x07, 0x07, 0x07),
    rgb!(0x1F, 0x07, 0x07),
    rgb!(0x2F, 0x0F, 0x07),
    rgb!(0x47, 0x0F, 0x07),
    rgb!(0x57, 0x17, 0x07),
    rgb!(0x67, 0x1F, 0x07),
    rgb!(0x77, 0x1F, 0x07),
    rgb!(0x8F, 0x27, 0x07),
    rgb!(0x9F, 0x2F, 0x07),
    rgb!(0xAF, 0x3F, 0x07),
    rgb!(0xBF, 0x47, 0x07),
    rgb!(0xC7, 0x47, 0x07),
    rgb!(0xDF, 0x4F, 0x07),
    rgb!(0xDF, 0x57, 0x07),
    rgb!(0xDF, 0x57, 0x07),
    rgb!(0xD7, 0x5F, 0x07),
    rgb!(0xD7, 0x5F, 0x07),
    rgb!(0xD7, 0x67, 0x0F),
    rgb!(0xCF, 0x6F, 0x0F),
    rgb!(0xCF, 0x77, 0x0F),
    rgb!(0xCF, 0x7F, 0x0F),
    rgb!(0xCF, 0x87, 0x17),
    rgb!(0xC7, 0x87, 0x17),
    rgb!(0xC7, 0x8F, 0x17),
    rgb!(0xC7, 0x97, 0x1F),
    rgb!(0xBF, 0x9F, 0x1F),
    rgb!(0xBF, 0x9F, 0x1F),
    rgb!(0xBF, 0xA7, 0x27),
    rgb!(0xBF, 0xA7, 0x27),
    rgb!(0xBF, 0xAF, 0x2F),
    rgb!(0xB7, 0xAF, 0x2F),
    rgb!(0xB7, 0xB7, 0x2F),
    rgb!(0xB7, 0xB7, 0x37),
    rgb!(0xCF, 0xCF, 0x6F),
    rgb!(0xDF, 0xDF, 0x9F),
    rgb!(0xEF, 0xEF, 0xC7),
    rgb!(0xFF, 0xFF, 0xFF),
];
